name: Release

on:
  push:
    tags:
      - v*

permissions:
  contents: write

env:
  REGISTRY: docker.io
  REPO: rancher

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install helm
        env:
          HELM_VERSION: "v3.13.3"
        run: |
          curl -sL https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz | tar xvzf - -C /usr/local/bin --strip-components=1

      - name: Create helm tarball
        env:
          HELM_TAG: "${{ github.ref_name }}"
        run: |
          mkdir -p build dist/artifacts
          cp -rf charts build/

          # Remove prefix `v` because it's not needed
          HELM_CHART_VERSION=$(echo "$HELM_TAG" | sed 's|^v||')

          sed -i \
              -e 's/^version:.*/version: '${HELM_CHART_VERSION}'/' \
              -e 's/appVersion:.*/appVersion: '${HELM_CHART_VERSION}'/' \
              build/charts/remotedialer-proxy/Chart.yaml

          sed -i \
              -e 's/tag:.*/tag: '${HELM_TAG}'/' \
              build/charts/remotedialer-proxy/values.yaml

          helm package -d ./dist/artifacts ./build/charts/remotedialer-proxy

      - name: Create release on Github
        env:
          GH_TOKEN:  ${{ github.token }}
        run: |
          cd dist/artifacts

          if [[ "${{ github.ref_name }}" == *-rc* ]]; then
            gh --repo "${{ github.repository }}" release create ${{ github.ref_name }} --verify-tag --generate-notes --prerelease remotedialer-proxy*.tgz
          else
            gh --repo "${{ github.repository }}" release create ${{ github.ref_name }} --verify-tag --generate-notes remotedialer-proxy*.tgz
          fi
  image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        arch:
        - amd64
        - arm64
    name: Build and push proxy image
    steps:
      - name : Checkout repository
        # https://github.com/actions/checkout/releases/tag/v4.1.1
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Read vault secrets"
        uses: rancher-eio/read-vault-secrets@main
        with:
          secrets: |
            secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials username | DOCKER_USERNAME;
            secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials password | DOCKER_PASSWORD

      - name: Set up QEMU
        # https://github.com/docker/setup-qemu-action/releases/tag/v3.1.0
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        # https://github.com/docker/setup-buildx-action/releases/tag/v3.4.0

      - name: Log in to the Container registry
        # https://github.com/docker/login-action/releases/tag/v3.2.0
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push the remotedialer image
        id: build
        # https://github.com/docker/build-push-action/releases/tag/v6.3.0
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          file: ./Dockerfile.proxy
          platforms: "linux/${{ matrix.arch }}"
          outputs: type=image,name=${{ env.REPO }}/remotedialer-proxy,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        # https://github.com/actions/upload-artifact/releases/tag/v4.3.3
        with:
          name: digests-${{ matrix.arch }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
 
  merge-images:
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    needs: image
    steps:
      - name: Download digests
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        # https://github.com/actions/download-artifact/releases/tag/v4.1.7
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        # https://github.com/docker/setup-buildx-action/releases/tag/v3.4.0

      - name: "Read vault secrets"
        uses: rancher-eio/read-vault-secrets@main
        with:
          secrets: |
            secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials username | DOCKER_USERNAME ;
            secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials password | DOCKER_PASSWORD

      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        # https://github.com/docker/login-action/releases/tag/v3.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      # setup tag name
      - if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo TAG_NAME=$(echo $GITHUB_REF | sed -e "s|refs/tags/||") >> $GITHUB_ENV

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create -t ${{ env.REGISTRY }}/${{ env.REPO }}/remotedialer-proxy:${{ env.TAG_NAME }} \
            $(printf '${{ env.REPO }}/remotedialer-proxy@sha256:%s ' *)